{% extends 'ScoutEventBaseBundle:Default:base.html.twig' %}

{% block javascripts %}
{{ parent() }}
<script type="text/javascript">
jQuery(document).ready(function() {
    // setup an "add a tag" link
    var $addAssistantLink = $('<button class="add_assistant_link">Add assistant</button>');
    var $newLinkDiv = $('<div/>').append($addAssistantLink);

    // Get the ul that holds the collection of participants
    var $collectionHolder = $('#group_assistants');

    // add the "add a tag" anchor and li to the tags ul
    $collectionHolder.append($newLinkDiv);
    
    $collectionHolder.children('.form-group').each(function() {
        addAssistantFormDeleteLink($(this));
    });
    
    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find(':input').length);

    $addAssistantLink.on('click', function(e) {
        // prevent the link from creating a "#" on the URL
        e.preventDefault();

        // add a new tag form (see next code block)
        addAssistantForm($collectionHolder, $newLinkDiv);
    });
    
    function addAssistantForm($collectionHolder, $newLinkDiv) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__label__/g, index)
                               .replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormDiv = $(newForm);
        // Default checkbox
        $newFormDiv.find("input[type='checkbox']").prop("checked", true);
        $newLinkDiv.before($newFormDiv);
        
        // add a delete link to the new form
        addAssistantFormDeleteLink($newFormDiv);
    }
    
    function addAssistantFormDeleteLink($assistantFormDiv) {
        var $removeFormA = $('<button>Remove</button>');
        $assistantFormDiv.append($removeFormA);

        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $assistantFormDiv.remove();
        });
    }
});
</script>
{% endblock %}

{% block body %}
    <div class="col-sm-10 col-sm-offset-1 singlebody">
        <h1 class="page-header">
            Edit Group
            <div class="pull-right">
                <a href="{{ path('scout_group_list') }}" class="btn btn-danger">Cancel</a>
            </div>
        </h1>
        {{ form_start(form) }}
        {{ form_row(form.name) }}
        {{ form_row(form.contact) }}
        {{ form_row(form.owner) }}
        {{ form_row(form.phone) }}
        {{ form_row(form.assistants) }}
        {{ form_end(form) }}
        <div class="clearfix"></div>
        <div class="clearfix">&nbsp;</div>
    </div>
{% endblock %}
